########################################
# provider.tf
########################################
terraform {
  required_version = ">= 1.5.0"
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 5.0"
    }
  }
}

provider "aws" {
  region = "ap-south-1"
}

########################################
# main.tf
########################################

# Security Group
resource "aws_security_group" "ec2_sg" {
  name        = "ec2-sg"
  description = "Allow SSH"
  vpc_id      = aws_vpc.this.id   # replace with your VPC id

  ingress {
    description = "SSH"
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]   # ⚠️ Open to all, restrict in real use
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name = "ec2-sg"
  }
}

# EC2 Instance
resource "aws_instance" "web" {
  ami           = "ami-0e742cca61fb65051" # Amazon Linux 2023 in ap-south-1
  instance_type = "t3.micro"
  subnet_id     = aws_subnet.public_a.id  # replace with your subnet
  key_name      = "my-keypair"            # replace with your key pair

  vpc_security_group_ids = [aws_security_group.ec2_sg.id]

  root_block_device {
    volume_size = 8
    volume_type = "gp3"
  }

  tags = {
    Name = "stelx-ec2"
  }
}

# Extra EBS Volume
resource "aws_ebs_volume" "extra" {
  availability_zone = aws_instance.web.availability_zone
  size              = 20   # 20 GB
  type              = "gp3"

  tags = {
    Name = "stelx-extra-volume"
  }
}

# Attach EBS to EC2
resource "aws_volume_attachment" "ebs_att" {
  device_name = "/dev/sdf"            # will appear as /dev/xvdf inside Linux
  volume_id   = aws_ebs_volume.extra.id
  instance_id = aws_instance.web.id
}
